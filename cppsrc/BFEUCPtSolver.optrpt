Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: SBLoc::locToCart3DPt(const SBLoc *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SBLoc::locToCart3DPt(const SBLoc *) const) SBLoc.hpp(97,54)

===========================================================================

Begin optimization report for: SBLoc::latLngToCart3DPt(double, double)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SBLoc::latLngToCart3DPt(double, double)) SBLoc.hpp(101,73)

===========================================================================

Begin optimization report for: Point<double, 3UL>::operator[](const Point<double, 3UL> *, size_t) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Point<double, 3UL>::operator[](const Point<double, 3UL> *, size_t) const) Point.hpp(117,53)

===========================================================================

Begin optimization report for: Point<double, 3UL>::eucDist(const Point<double, 3UL> &, const Point<double, 3UL> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Point<double, 3UL>::eucDist(const Point<double, 3UL> &, const Point<double, 3UL> &)) Point.hpp(177,83)

===========================================================================

Begin optimization report for: Point<double, 3UL>::eucSqDist(const Point<double, 3UL> &, const Point<double, 3UL> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Point<double, 3UL>::eucSqDist(const Point<double, 3UL> &, const Point<double, 3UL> &)) Point.hpp(182,85)

===========================================================================

Begin optimization report for: Point<double, 3UL>::havDist(const Point<double, 3UL> &, const Point<double, 3UL> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Point<double, 3UL>::havDist(const Point<double, 3UL> &, const Point<double, 3UL> &)) Point.hpp(196,83)

===========================================================================

Begin optimization report for: Point<double, 3UL>::manDist(const Point<double, 3UL> &, const Point<double, 3UL> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Point<double, 3UL>::manDist(const Point<double, 3UL> &, const Point<double, 3UL> &)) Point.hpp(209,83)

===========================================================================

Begin optimization report for: Point<double, 3UL>::Point<double, double, double>(Point<double, 3UL> *, double, double, double)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Point<double, 3UL>::Point<double, double, double>(Point<double, 3UL> *, double, double, double)) Point.hpp(43,36)

===========================================================================

Begin optimization report for: Point<double, 3UL>::dist<Point<double, 3UL>::DistType::EUCSQ>(const Point<double, 3UL> &, const Point<double, 3UL> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Point<double, 3UL>::dist<Point<double, 3UL>::DistType::EUCSQ>(const Point<double, 3UL> &, const Point<double, 3UL> &)) Point.hpp(163,80)

===========================================================================

Begin optimization report for: BFSBSolver::~BFSBSolver(BFSBSolver *) noexcept

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (BFSBSolver::~BFSBSolver(BFSBSolver *) noexcept) BFSBSolver.hpp(24,27)

===========================================================================

Begin optimization report for: BFSBSolver::~BFSBSolver(BFSBSolver *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (BFSBSolver::~BFSBSolver(BFSBSolver *const)) BFSBSolver.hpp(24,13)

===========================================================================

Begin optimization report for: BFEUCPtSBSolver::findNearest(const BFEUCPtSBSolver *, double, double) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (BFEUCPtSBSolver::findNearest(const BFEUCPtSBSolver *, double, double) const) [12] BFEUCPtSolver.cpp(12,73)
  -> INLINE: (13,54) SBLoc::latLngToCart3DPt(double, double)
    -> INLINE: SBLoc.hpp:(102,67) Point<double, 3UL>::Point<double, double, double>(Point<double, 3UL> *, double, double, double)
  -> INLINE: (14,13) std::__1::__wrap_iter<std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>::const_pointer>::operator*(const std::__1::__wrap_iter<std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>::const_pointer> *) const noexcept
  -> INLINE: (14,38) std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>::cbegin(const std::__1::vector<SBLoc, std::__1::allocator<SBLoc>> *) const noexcept
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (14,38) std::__1::shared_ptr<std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>>::operator->(const std::__1::shared_ptr<std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>> *) const noexcept
  -> INLINE: (14,57) std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>::cend(const std::__1::vector<SBLoc, std::__1::allocator<SBLoc>> *) const noexcept
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (14,57) std::__1::shared_ptr<std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>>::operator->(const std::__1::shared_ptr<std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>> *) const noexcept
  -> INLINE: (15,31) std::__1::min_element<std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>::const_iterator, struct lambda [] type at line 118389, col. 31>(std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>::const_iterator, std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>::const_iterator, struct lambda [] type at line 118389, col. 31)
    -> INLINE: /Library/Developer/CommandLineTools/usr/include/c++/v1/algorithm:(2624,23) lambda [] type at line 118389, col. 31::operator()(const struct lambda [] type at line 118389, col. 31 *, const SBLoc &, const SBLoc &)->bool
      -> INLINE: BFEUCPtSolver.cpp:(16,42) Point<double, 3UL>::dist<Point<double, 3UL>::DistType::EUCSQ>(const Point<double, 3UL> &, const Point<double, 3UL> &)
        -> INLINE: Point.hpp:(168,20) Point<double, 3UL>::eucSqDist(const Point<double, 3UL> &, const Point<double, 3UL> &)
          -> INLINE: (186,19) Point<double, 3UL>::operator[](const Point<double, 3UL> *, size_t) const
            -> INLINE: (118,18) std::__1::array<double, 3UL>::operator[](const std::__1::array<double, 3UL> *, std::__1::array<double, 3UL>::size_type) const
          -> INLINE: (186,28) Point<double, 3UL>::operator[](const Point<double, 3UL> *, size_t) const
            -> INLINE: (118,18) std::__1::array<double, 3UL>::operator[](const std::__1::array<double, 3UL> *, std::__1::array<double, 3UL>::size_type) const
          -> INLINE: (188,19) Point<double, 3UL>::operator[](const Point<double, 3UL> *, size_t) const
            -> INLINE: (118,18) std::__1::array<double, 3UL>::operator[](const std::__1::array<double, 3UL> *, std::__1::array<double, 3UL>::size_type) const
          -> INLINE: (188,28) Point<double, 3UL>::operator[](const Point<double, 3UL> *, size_t) const
            -> INLINE: (118,18) std::__1::array<double, 3UL>::operator[](const std::__1::array<double, 3UL> *, std::__1::array<double, 3UL>::size_type) const
      -> INLINE: BFEUCPtSolver.cpp:(16,100) SBLoc::locToCart3DPt(const SBLoc *) const
        -> INLINE: SBLoc.hpp:(98,34) SBLoc::latLngToCart3DPt(double, double)
          -> INLINE: (102,67) Point<double, 3UL>::Point<double, double, double>(Point<double, 3UL> *, double, double, double)
      -> INLINE: BFEUCPtSolver.cpp:(17,37) Point<double, 3UL>::dist<Point<double, 3UL>::DistType::EUCSQ>(const Point<double, 3UL> &, const Point<double, 3UL> &)
        -> INLINE: Point.hpp:(168,20) Point<double, 3UL>::eucSqDist(const Point<double, 3UL> &, const Point<double, 3UL> &)
          -> INLINE: (186,19) Point<double, 3UL>::operator[](const Point<double, 3UL> *, size_t) const
            -> INLINE: (118,18) std::__1::array<double, 3UL>::operator[](const std::__1::array<double, 3UL> *, std::__1::array<double, 3UL>::size_type) const
          -> INLINE: (186,28) Point<double, 3UL>::operator[](const Point<double, 3UL> *, size_t) const
            -> INLINE: (118,18) std::__1::array<double, 3UL>::operator[](const std::__1::array<double, 3UL> *, std::__1::array<double, 3UL>::size_type) const
          -> INLINE: (188,19) Point<double, 3UL>::operator[](const Point<double, 3UL> *, size_t) const
            -> INLINE: (118,18) std::__1::array<double, 3UL>::operator[](const std::__1::array<double, 3UL> *, std::__1::array<double, 3UL>::size_type) const
          -> INLINE: (188,28) Point<double, 3UL>::operator[](const Point<double, 3UL> *, size_t) const
            -> INLINE: (118,18) std::__1::array<double, 3UL>::operator[](const std::__1::array<double, 3UL> *, std::__1::array<double, 3UL>::size_type) const
      -> INLINE: BFEUCPtSolver.cpp:(17,95) SBLoc::locToCart3DPt(const SBLoc *) const
        -> INLINE: SBLoc.hpp:(98,34) SBLoc::latLngToCart3DPt(double, double)
          -> INLINE: (102,67) Point<double, 3UL>::Point<double, double, double>(Point<double, 3UL> *, double, double, double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /Library/Developer/CommandLineTools/usr/include/c++/v1/algorithm(2623,9) inlined into BFEUCPtSolver.cpp(15,31)
   remark #25084: Preprocess Loopnests: Moving Out Store    [ Point.hpp(43,29) ]
   remark #25084: Preprocess Loopnests: Moving Out Store    [ SBLoc.hpp(98,34) ]
   remark #25084: Preprocess Loopnests: Moving Out Store    [ Point.hpp(43,29) ]
   remark #25084: Preprocess Loopnests: Moving Out Store    [ SBLoc.hpp(98,34) ]
   remark #25084: Preprocess Loopnests: Moving Out Store    [ /Library/Developer/CommandLineTools/usr/include/c++/v1/iterator(1371,11) ]
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 4
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between ___i.___i->lat (98:34) and U0_V.U0_V.U0_V (43:29)

   LOOP BEGIN at Point.hpp(187,5) inlined into BFEUCPtSolver.cpp(15,31)
      remark #25045: Fused Loops: ( 187 187 )

      remark #25436: completely unrolled by 2   (pre-vector) 
   LOOP END

   LOOP BEGIN at Point.hpp(187,5) inlined into BFEUCPtSolver.cpp(15,31)
      remark #25046: Loop lost in Fusion 
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

BFEUCPtSolver.cpp(12,73):remark #34051: REGISTER ALLOCATION : [__ZNK15BFEUCPtSBSolver11findNearestEdd] BFEUCPtSolver.cpp:12

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rbp rsi rdi r12-r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :      82
            Global    :      26
            Local     :      56
        Regenerable   :       0
        Spilled       :      17
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     128 bytes*
            Reads     :      17 [2.93e+01 ~ 15.4%]
            Writes    :      16 [2.11e+01 ~ 11.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: BFEUCPtSBSolver::printSolverInfo(const BFEUCPtSBSolver *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (BFEUCPtSBSolver::printSolverInfo(const BFEUCPtSBSolver *) const) [13] BFEUCPtSolver.cpp(21,47)
  -> INLINE: (22,15) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/Library/Developer/CommandLineTools/usr/include/c++/v1/memory(2089,77):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 0)
BFEUCPtSolver.cpp(21,47):remark #34051: REGISTER ALLOCATION : [__ZNK15BFEUCPtSBSolver15printSolverInfoEv] BFEUCPtSolver.cpp:21

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     117
            Global    :      34
            Local     :      83
        Regenerable   :      24
        Spilled       :       8
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :       5 [1.04e+00 ~ 2.8%]
            Writes    :       7 [4.08e-02 ~ 0.1%]
        Spills        :      16 bytes*
            Reads     :       3 [5.40e-02 ~ 0.1%]
            Writes    :       2 [2.20e-01 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: BFEUCPtSBSolver::~BFEUCPtSBSolver(BFEUCPtSBSolver *) noexcept

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (BFEUCPtSBSolver::~BFEUCPtSBSolver(BFEUCPtSBSolver *) noexcept) [15] BFEUCPtSolver.hpp(15,7)
  -> INLINE: (15,7) BFSBSolver::~BFSBSolver(BFSBSolver *const)
    -> INLINE: BFSBSolver.hpp:(24,13) BFSBSolver::~BFSBSolver(BFSBSolver *) noexcept
      -> INLINE: (24,28) std::__1::shared_ptr<std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>>::~shared_ptr(std::__1::shared_ptr<std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>> *) noexcept
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

BFEUCPtSolver.hpp(15,7):remark #34051: REGISTER ALLOCATION : [__ZN15BFEUCPtSBSolverD1Ev] BFEUCPtSolver.hpp:15

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rdi r15]
        
    Routine temporaries
        Total         :      19
            Global    :       9
            Local     :      10
        Regenerable   :       2
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: BFEUCPtSBSolver::~BFEUCPtSBSolver(BFEUCPtSBSolver *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (BFEUCPtSBSolver::~BFEUCPtSBSolver(BFEUCPtSBSolver *const)) [16] BFEUCPtSolver.hpp(15,7)
  -> INLINE: (15,7) BFEUCPtSBSolver::~BFEUCPtSBSolver(BFEUCPtSBSolver *) noexcept
    -> INLINE: (15,7) BFSBSolver::~BFSBSolver(BFSBSolver *const)
      -> INLINE: BFSBSolver.hpp:(24,13) BFSBSolver::~BFSBSolver(BFSBSolver *) noexcept
        -> INLINE: (24,28) std::__1::shared_ptr<std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>>::~shared_ptr(std::__1::shared_ptr<std::__1::vector<SBLoc, std::__1::allocator<SBLoc>>> *) noexcept
           {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

BFEUCPtSolver.hpp(15,7):remark #34051: REGISTER ALLOCATION : [__ZN15BFEUCPtSBSolverD0Ev] BFEUCPtSolver.hpp:15

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbx rbp rdi]
        
    Routine temporaries
        Total         :      20
            Global    :      10
            Local     :      10
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: lambda [] type at line 118389, col. 31::operator()(const struct lambda [] type at line 118389, col. 31 *, const SBLoc &, const SBLoc &)->bool

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (lambda [] type at line 118389, col. 31::operator()(const struct lambda [] type at line 118389, col. 31 *, const SBLoc &, const SBLoc &)->bool) BFEUCPtSolver.cpp(15,69)

===========================================================================
